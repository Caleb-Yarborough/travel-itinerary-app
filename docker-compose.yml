# docker-compose.yml
# -----------------------------------------------------------------------------
# This configuration file defines and runs multi-container Docker applications
# using Docker Compose. It spins up:
#   - A React frontend (client)
#   - A Node.js + Express + OpenAI backend (server)
#   - A Redis container for caching itineraries
#
# Purpose:
# - Simplifies local development by running all services together
# - Ensures consistent networking and environment setup across machines
# - Automatically restarts containers in dependency order
# -----------------------------------------------------------------------------

services:
  # -------------------- FRONTEND --------------------
  client:
    # Build the frontend container from the ./client directory
    build: ./client

    # Map port 3000 on the host to port 80 inside the container
    # This allows you to access the app at http://localhost:3000
    ports:
      - "3000:80"

    # Mount the local ./client folder to /app in the container
    # Enables live reload for development
    volumes:
      - ./client:/app

    # Wait for the backend (server) to be ready before starting
    depends_on:
      - server

  # -------------------- BACKEND --------------------
  server:
    # Build the backend container from the ./server directory
    build: ./server

    # Expose port 8000 on both the host and the container
    # This is the API endpoint used by the frontend
    ports:
      - "8000:8000"

    # Set the working directory inside the container to /app
    working_dir: /app

    # Mount the local ./server folder to /app for hot-reloading
    volumes:
      - ./server:/app

    # Run the backend in development mode using nodemon
    command: npm run dev

    # Set the Redis connection URL so the backend knows where to cache data
    environment:
      - REDIS_URL=redis://redis:6379

    # Load additional environment variables from .env (e.g., OpenAI API key)
    env_file:
      - .env

    # Ensure Redis starts before this service
    depends_on:
      - redis

  # -------------------- REDIS CACHE --------------------
  redis:
    # Use the lightweight Alpine version of the official Redis image
    image: redis:alpine

    # Expose Redis default port for use by the backend
    ports:
      - "6379:6379"
